{
  "name": "criterion",
  "version": "0.3.2",
  "description": "criterion describes sql-where-conditions as objects which can be combined and manipulated",
  "keywords": [
    "sql",
    "condition",
    "where"
  ],
  "homepage": "http://github.com/snd/criterion",
  "author": {
    "name": "Maximilian KrÃ¼ger",
    "email": "kruemaxi@gmail.com",
    "url": "http://github.com/snd"
  },
  "bugs": {
    "url": "http://github.com/snd/criterion/issues",
    "email": "kruemaxi@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/snd/criterion.git"
  },
  "licenses": {
    "type": "MIT",
    "url": "git://github.com/snd/criterion/LICENSE"
  },
  "engines": {
    "node": ">=0.8.5"
  },
  "dependencies": {},
  "devDependencies": {
    "coffee-script": "1.6.3",
    "nodeunit": "0.8"
  },
  "main": "src/factory",
  "scripts": {
    "prepublish": "coffee --bare --compile --output src src/*.coffee",
    "postpublish": "rm src/*.js",
    "pretest": "coffee --bare --compile --output src src/*.coffee && coffee --bare --compile --output test test/*.coffee",
    "posttest": "rm src/*.js && rm test/*.js",
    "test": "nodeunit test/*.js"
  },
  "readme": "# criterion\n\n[![Build Status](https://travis-ci.org/snd/criterion.png)](https://travis-ci.org/snd/criterion)\n\ncriterion describes sql-where-conditions as objects which can be combined\nand manipulated.\n\ncriterion is inspired by the [mongo query language](http://www.mongodb.org/display/DOCS/Advanced+Queries)\n\n[mohair](https://github.com/snd/mohair) uses criterion.\nthe arguments to mohairs `where()` method are **exactly** the same as the arguments to the function exported by criterion.\nmohair is an sql builder which does a lot more than criterion: [go check it out.](https://github.com/snd/mohair)\n\n### install\n\n```\nnpm install criterion\n```\n\n### use\n\nrequire:\n\n```javascript\nvar criterion = require('criterion');\n```\n\ncriterion exports a single function.\nthat function can be called with a **query object** as an argument.\na query object describes an sql-where-condition.\n[see the examples](#examples) below for an idea of possible query objects.\n\n```javascript\nvar c = criterion({x: 7, y: 8});\n```\n\nsql and a list of parameter bindings can be generated from the object returned by criterion:\n\n```javascript\nc.sql();        // => 'x = ? AND y = ?'\nc.params();     // => [7, 8]\n```\n\nalternatively criterion can be called with a string of **raw sql** and optional parameter bindings:\n\n```javascript\nvar c = criterion('x = ? AND Y = ?', 7, 8);\n\nc.sql();        // => 'x = ? AND y = ?'\nc.params();     // => [7, 8]\n```\n\nany criterion and any other object that responds to a `sql()` and optionally a `params()` method can\nbe used in place of any value in a query object.\nthis allows you to mix query objects with arbitrary sql:\n\n```javascript\nvar c = criterion({x: {$ne: criterion('LOG(y, ?)', 4)}});\nc.sql();        // => 'x != LOG(y, ?)'\nc.params();     // => [4]\n```\n\ncriteria can be combined:\n\n```javascript\nvar fst = criterion({x: 7, y: 'a'});\nvar snd = criterion('z = ?', true);\n\nfst.and(snd).sql();         // => '(x = ?) AND (y = ?) AND (z = ?)'\nfst.and(snd).params();      // => [7, 'a', true]\n\nsnd.or(fst).sql();          // => '(z = ?) OR (x = ? AND y = ?)'\nsnd.or(fst).params();       // => [true, 7, 'a']\n```\n\ncriteria can be negated:\n\n```javascript\nvar c = criterion({x: 7, y: 'a'});\nc.not().sql();              // => 'NOT ((x = ?) AND (y = ?))'\nc.not().params();           // => [7, 'a']\n```\n\ndouble negations are removed:\n\n```javascript\nvar c = criterion({x: 7, y: 'a'});\nc.not().not().sql();        // => '(x = ?) AND (y = ?)'\nc.not().not().params();     // => [7, 'a']\n```\n\n`and()`, `or()` and `not()` return new objects.\nno method ever changes the state of the object it is called on.\nthis enables a functional programming style.\n\n### examples\n\n##### logical\n\n###### find where `x = 7` and `y = 'a'`\n\n```javascript\nvar c = criterion({x: 7, y: 'a'});\nc.sql();        // => 'x = ? AND y = ?'\nc.params();     // => [7, 'a']\n```\nor\n```javascript\nvar c = criterion([{x: 7}, {y: 'a'}]);\n```\nor\n```javascript\nvar c = criterion('x = ? AND y = ?', 7, 'a');\n```\n\n###### find where `x = 7` or `y = 6`\n\n```javascript\nvar c = criterion({$or: [{x: 7}, {y: 6}]});\nc.sql();        // => 'x = ? OR y = ?'\nc.params();     // => [7, 6]\n```\nor\n```javascript\nvar c = criterion({$or: {x: 7, y: 6}});\n```\nor\n```javascript\nvar c = criterion('x = ? OR y = ?', 7, 6);\n```\n\n##### comparison\n\n###### find where `x != 3`\n\n```javascript\nvar c = criterion({x: {$ne: 3}});\nc.sql();        // => 'x != ?'\nc.params();     // => [3]\n```\nor\n```javascript\nvar c = criterion('x != ?', 3);\n```\n\n###### find where `x < 3` and `y <= 4`\n\n```javascript\nvar c = criterion({x: {$lt: 3}, y: {$lte: 4}});\nc.sql();        // => 'x < ? AND y <= ?'\nc.params();     // => [3, 4]\n```\nor\n```javascript\nvar c = criterion('x < ? AND y <= ?', 3, 4);\n```\n\n###### find where `x > 3` and `y >= 4`\n\n```javascript\nvar c = criterion({x: {$gt: 3}, y: {$gte: 4}});\nc.sql();        // => 'x > ? AND y >= ?'\nc.params();     // => [3, 4]\n```\nor\n```javascript\nvar c = criterion('x > ? AND y >= ?', 3, 4);\n```\n\n###### find where not (`x > 3` and `y >= 4`)\n\n```javascript\nvar c = criterion({$not: {x: {$gt: 3}, y: {$gte: 4}}});\nc.sql();        // => 'NOT (x > ? AND y >= ?)'\nc.params();     // => [3, 4]\n```\nor\n```javascript\nvar c = criterion('NOT (x > ? AND y >= ?)', 3, 4);\n```\n\n###### find where `x < NOW()`\n\n```javascript\nvar c = criterion(x: {$lt: criterion('NOW()')});\nc.sql();        // => 'x < NOW()'\nc.params();     // => []\n```\n\n###### find where `x != LOG(y, 4)`\n\n```javascript\nvar c = criterion({x: {$ne: criterion('LOG(y, ?)', 4)}});\nc.sql();        // => 'x != LOG(y, ?)'\nc.params();     // => [4]\n```\n\n###### find where `x` is between `5` and `10`\n\n```javascript\nvar c = criterion('x BETWEEN ? AND ?', 5, 10);\nc.sql();        // => 'x BETWEEN ? AND ?'\nc.params();     // => [5, 10]\n```\n\n##### array\n\n###### find where `x` is in `[1, 2, 3]`\n\n```javascript\nvar c = criterion({x: [1, 2, 3]});\nc.sql();        // => 'x IN (?, ?, ?)'\nc.params();     // => [1,2,3]\n```\nor\n```javascript\nvar c = criterion('x IN (?, ?, ?)', 1, 2, 3);\n```\n\n###### find where `x` is not in `[1, 2, 3]`\n\n```javascript\nvar c = criterion({x: {$nin: [1, 2, 3]}});\nc.sql();        // => 'x NOT IN (?, ?, ?)'\nc.params();     // => [1,2,3]\n```\nor\n```javascript\nvar c = criterion('x NOT IN (?, ?, ?)', 1, 2, 3);\n```\n\n##### null\n\n###### find where `x` is `null`\n\n```javascript\nvar c = criterion({x: {$null: true});\nc.sql();        // => 'x IS NULL'\nc.params();     // => []\n```\nor\n```javascript\nvar c = criterion('x IS NULL');\n```\n\n###### find where `x` is not `null`\n\n```javascript\nvar c = criterion({x: {$null: false}});\nc.sql();        // => 'x IS NOT NULL'\nc.params();     // => []\n```\nor\n```javascript\nvar c = criterion('x IS NOT NULL');\n```\n\n### license: MIT\n",
  "readmeFilename": "README.md",
  "_id": "criterion@0.3.2",
  "dist": {
    "shasum": "909af33ee4c6a3eaf650cf311b5b453d9a702ae0"
  },
  "_from": "criterion@0.3.2",
  "_resolved": "https://registry.npmjs.org/criterion/-/criterion-0.3.2.tgz"
}
