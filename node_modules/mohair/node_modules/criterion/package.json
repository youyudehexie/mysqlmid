{
  "name": "criterion",
  "version": "0.2.1",
  "description": "criterion can describe sql where-conditions as objects for nodejs",
  "homepage": "http://github.com/snd/criterion",
  "author": {
    "name": "Maximilian KrÃ¼ger",
    "email": "kruemaxi@gmail.com",
    "url": "http://github.com/snd"
  },
  "bugs": {
    "url": "http://github.com/snd/criterion/issues",
    "email": "kruemaxi@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/snd/criterion.git"
  },
  "licenses": {
    "type": "MIT",
    "url": "git://github.com/snd/criterion/LICENSE"
  },
  "engines": {
    "node": ">=0.8.5"
  },
  "dependencies": {
    "coffee-script": "1.4.0",
    "beget": "1.0.0"
  },
  "devDependencies": {
    "nodeunit": "0.7.4"
  },
  "readme": "# criterion\n\n[![Build Status](https://travis-ci.org/snd/criterion.png)](https://travis-ci.org/snd/criterion)\n\ncriterion can describe sql where-conditions as objects for nodejs\n\ninspired by the [mongo query language](http://www.mongodb.org/display/DOCS/Advanced+Queries)\n\n### install\n\n    npm install criterion\n\n### use\n\n##### require\n\n```coffeescript\ncriterion = require 'criterion'\n```\n\n##### create from string and parameters\n\n```coffeescript\nc = criterion 'x = ?', 6\n\nc.sql()     # 'x = ?'\nc.params()  # [6]\n```\n\n##### create from object\n\n```coffeescript\nc = criterion {x: 7}\n\nc.sql()     # 'x = ?'\nc.params()  # [7]\n```\n\n##### `and` and `or`\n\n```coffeescript\nfst = criterion {x: 7, y: 'foo'}\nsnd = criterion 'z = ?', true\n\nfst.and(snd).sql()      # '(x = ?) AND (y = ?) AND (z = ?)'\nfst.and(snd).params()   # [7, 'foo', true]\n\nsnd.or(fst).sql()       # '(z = ?) OR (x = ? AND y = ?)'\nsnd.or(fst).params()    # [true, 7, 'foo']\n```\n\n##### `not`\n\n```coffeescript\nc = criterion {x: 7, y: 'foo'}\n\nc.not().sql()           # 'NOT ((x = ?) AND (y = ?))'\nc.not().params()        # [7, 'foo', true]\n\nc.not().not().sql()     # '(x = ?) AND (y = ?)'\nc.not().not().params()  # [7, 'foo', true]\n```\n\ncriteria are immutable: `and`, `or` and `not` return new objects.\n\n### possible function arguments to `criterion`\n\n##### find where `x = 7` and `y = 'foo'`\n\n```coffeescript\n{x: 7, y: 'foo'}\n# or\n[{x: 7}, {y: 'foo'}]\n# or\n'x = ? AND y = ?', 7, 'foo'\n```\n\n##### find where `x` is in `[1, 2, 3]`\n\n```coffeescript\n{x: [1, 2, 3]}\n```\n\n##### find where `x` is not in `[1, 2, 3]`\n\n```coffeescript\n{x: {$nin: [1, 2, 3]}}\n```\n\n##### find where `x != 3`\n\n```coffeescript\n{x: {$ne: 3}}\n# or\n'x != ?', 3\n```\n\n##### find where `x < 3` and `y <= 4`\n\n```coffeescript\n{x: {$lt: 3}, y: {$lte: 4}}\n# or\n'x < ? AND y <= ?', 3, 4\n```\n\n##### find where `x > 3` and `y >= 4`\n\n```coffeescript\n{x: {$gt: 3}, y: {$gte: 4}}\n# or\n'x > ? AND y >= ?', 3, 4\n```\n\n##### find where not (`x > 3` and `y >= 4`)\n\n```coffeescript\n{$not: {x: {$gt: 3}, y: {$gte: 4}}}\n# or\n'NOT (x > ? AND y >= ?)', 3, 4\n```\n\n##### find where `x < NOW()`\n\n```coffeescript\n'x < NOW()'\n```\n\n##### find where `x` is between `5` and `10`\n\n```coffeescript\n'x BETWEEN ? AND ?', 5, 10\n```\n\n##### find where `x = 7` or `y = 6`\n\n```coffeescript\n{$or: [{x: 7}, {y: 6}]}\n# or\n{$or: {x: 7, y: 6}}\n# or\n'x = ? OR y = ?', 7, 6\n```\n\n##### find where `x` is `null`\n\n```coffeescript\n{x: {$null: true}}\n# or\n'x IS NULL'\n```\n\n##### find where `x` is not `null`\n\n```coffeescript\n{x: {$null: false}}\n# or\n'x IS NOT NULL'\n```\n\nall query parts can be composed at will!\n\n### license: MIT\n",
  "readmeFilename": "README.md",
  "_id": "criterion@0.2.1",
  "dist": {
    "shasum": "6650943f7086d170f53c7f0abb0a4ebe4879ca74"
  },
  "_from": "criterion@0.2.1",
  "_resolved": "https://registry.npmjs.org/criterion/-/criterion-0.2.1.tgz"
}
